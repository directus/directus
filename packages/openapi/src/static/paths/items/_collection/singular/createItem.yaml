summary: Create an item
description: Create a new item in the given collection.
operationId: createItem
parameters:
- $ref: ../../../../components/parameters.yaml#/Collection
- $ref: ../../../../components/parameters.yaml#/Fields
- $ref: ../../../../components/parameters.yaml#/Meta
requestBody:
  content:
    application/json:
      schema:
        anyOf:
        - $ref: ../../../../components/schemas/items.yaml
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../../../components/schemas/items.yaml
  '401':
    $ref: ../../../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../../../components/responses.yaml#/NotFoundError
tags:
- Items
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, createItem } from '@directus/sdk';
    const client = createDirectus('directus_project_url').with(rest());
    const result = await client.request(createItem(collection_name, item_object));
- label: GraphQL
  lang: GraphQL
  source: |
    type Mutation {
      create_<collection>_item(data: create_<collection>_input): <collection>
    }
