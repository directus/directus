summary: Update Singleton
description: |
  Update a singleton item.

  The REST and GraphQL requests for singletons are the same as those used to Update Multiple Items but in contrast the request should consist of the plain item object.
operationId: updateSingleton
parameters:
- $ref: ../../../../components/parameters.yaml#/Collection
- $ref: ../../../../components/parameters.yaml#/Fields
- $ref: ../../../../components/parameters.yaml#/Meta
requestBody:
  content:
    application/json:
      schema:
        anyOf:
        - $ref: ../../../../components/schemas/items.yaml
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../../../components/schemas/items.yaml
  '401':
    $ref: ../../../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../../../components/responses.yaml#/NotFoundError
security: []
tags:
- Items
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, updateSingleton } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(updateSingleton(collection_name, partial_item_object));
- label: GraphQL
  lang: GraphQL
  source: |
    type Mutation {
      update_<collection>_items(data: [update_<collection>_input]): [<collection>]
    }
