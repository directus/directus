summary: Update an item
description: Update an existing item.
operationId: updateItem
parameters:
- name: id
  in: path
  description: Unique identifier of the item.
  required: true
  schema:
    type: string
- $ref: ../../../../components/parameters.yaml#/Collection
- $ref: ../../../../components/parameters.yaml#/Fields
- $ref: ../../../../components/parameters.yaml#/Meta
requestBody:
  content:
    application/json:
      schema:
        anyOf:
        - $ref: ../../../../components/schemas/items.yaml
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../../../components/schemas/items.yaml
  '401':
    $ref: ../../../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../../../components/responses.yaml#/NotFoundError
security: []
tags:
- Items
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, updateItem } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(updateItem(collection_name, item_id, partial_item_object));
- label: GraphQL
  lang: GraphQL
  source: |
    type Mutation {
      update_<collection>_item(id: ID!, data: update_<collection>_input!): <collection>
    }
