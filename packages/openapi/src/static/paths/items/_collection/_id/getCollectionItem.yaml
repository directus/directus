summary: Retrieve an Item
description: Retrieves an item in a given collection.
operationId: getCollectionItem
parameters:
- $ref: ../../../../components/parameters.yaml#/UUId
- $ref: ../../../../components/parameters.yaml#/Collection
- $ref: ../../../../components/parameters.yaml#/Version
- $ref: ../../../../components/parameters.yaml#/Fields
- $ref: ../../../../components/parameters.yaml#/Meta
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../../../components/schemas/items.yaml
  '401':
    $ref: ../../../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../../../components/responses.yaml#/NotFoundError
security: []
tags:
- Items
x-codeSamples:
  - label: Directus SDK
    lang: JavaScript
    source: |
      import { createDirectus, rest, readItem } from '@directus/sdk';

      const client = createDirectus('directus_project_url').with(rest());

      const result = await client.request(readItem(collection_name, item_id, query_object));
  - label: GraphQL
    lang: GraphQL
    source: |
      type Query {
        <collection>_by_id(id: ID!, version: String): <collection>
      }

      type Query {
        <collection>_by_version(id: ID!, version: String!): <collection_version_raw>
      }
