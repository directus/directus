summary: Create a Permission Rule
description: Create a new permission rule.
operationId: createPermission
parameters:
- $ref: ../../../components/parameters.yaml#/Meta
requestBody:
  content:
    application/json:
      schema:
        type: object
        properties:
          collection:
            type: string
            description: What collection this permission applies to.
            example: customers
          comment:
            type: string
            description: If the user can post comments.
            enum:
              - none
              - create
              - update
              - full
          create:
            type: string
            description: If the user can create items.
            enum:
              - none
              - full
          delete:
            type: string
            description: If the user can update items.
            enum:
              - none
              - mine
              - role
              - full
          explain:
            type: string
            description: If the user is required to leave a comment explaining what
              was changed.
            enum:
              - none
              - create
              - update
              - always
          read:
            type: string
            description: If the user can read items.
            enum:
              - none
              - mine
              - role
              - full
          role:
            type: integer
            description: Unique identifier of the role this permission applies to.
            example: 3
          read_field_blacklist:
            type: array
            description: Explicitly denies read access for specific fields.
            items:
              type: string
            example:
            - featured_image
          status:
            type: string
            description: What status this permission applies to.
          status_blacklist:
            type: array
            description: Explicitly denies specific statuses to be used.
            items:
              type: string
          update:
            type: string
            description: If the user can update items.
            enum:
              - none
              - mine
              - role
              - full
          write_field_blacklist:
            type: array
            description: Explicitly denies write access for specific fields.
            items:
              type: string
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../../components/schemas/permissions.yaml
  '401':
    $ref: ../../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../../components/responses.yaml#/NotFoundError
tags:
- Permissions
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, createPermission } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(createPermission(permission_object));
- label: GraphQL
  lang: GraphQL
  source: |
    POST /graphql/system

    type Mutation {
    	create_permissions_item(data: create_directus_permissions_input!): directus_permissions
    }
