summary: Generate Two-Factor Authentication Secret
description: Generates a secret and returns the URL to be used in an authenticator app.
operationId: generateTwoFactorSecret
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - password
        properties:
          password:
              description: The user's password.
              type: string
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            secret:
              type: string
              description: OTP secret to be saved in the authenticator app.
            otpauth_url:
              type: string
              description: 'otpauth:// formatted URL. Can be rendered as QR code and used in most authenticator apps.'
  '401':
    $ref: ../../../../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../../../../components/responses.yaml#/NotFoundError
security: []
tags:
- Users
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, generateTwoFactorSecret } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(generateTwoFactorSecret(user_password));
- label: GraphQL
  lang: GraphQL
  source: |
    POST /graphql/system

    type Mutation {
      users_me_tfa_generate(password: String!): users_me_tfa_generate_data
    }
