summary: Retrieve a User
description: List an existing user by primary key.
operationId: getUser
parameters:
- $ref: ../../../components/parameters.yaml#/UUId
- $ref: ../../../components/parameters.yaml#/Fields
- $ref: ../../../components/parameters.yaml#/Meta
responses:
  '200':
    description: Successful request
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../../components/schemas/users.yaml
  '401':
    $ref: ../../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../../components/responses.yaml#/NotFoundError
security: []
tags:
- Users
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, readUser } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(readUser(user_id, query_object));
- label: GraphQL
  lang: GraphQL
  source: |
    POST /graphql/system

    type Query {
    	users_by_id(id: ID!): directus_users
    }
