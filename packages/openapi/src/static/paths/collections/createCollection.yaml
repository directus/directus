summary: Create a Collection
description: |
  Create a new collection in Directus.

  The `collection` and `schema` properties are required. To create a collection folder that doesn't have an underlying table, you can set `schema` to `null`.

  You are able to provide an array of `fields` to be created during the creation of the collection. See the fields object for more information on what properties are available in a field.
operationId: createCollection
parameters:
- $ref: ../../components/parameters.yaml#/Meta
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
        - collection
        - fields
        properties:
          collection:
            type: string
            description: Unique name of the collection.
            example: my_collection
          fields:
            type: array
            description: The fields contained in this collection. See the fields reference
              for more information. Each individual field requires field, type, and
              interface to be provided.
            items:
              type: object
          icon:
            type: string
            description: Name of a Google Material Design Icon that's assigned to
              this collection.
            example: people
            nullable: true
          note:
            type: string
            description: A note describing the collection.
            example:
            nullable: true
          display_template:
            type: string
            description: Text representation of how items from this collection are
              shown across the system.
            example:
            nullable: true
          hidden:
            type: boolean
            description: Whether or not the collection is hidden from the navigation
              in the admin app.
            example: false
          singleton:
            type: boolean
            description: Whether or not the collection is treated as a single object.
            example: false
          translation:
            type: string
            description: Key value pairs of how to show this collection's name in
              different languages in the admin app.
            example:
            nullable: true
          versioning:
            type: boolean
            description: Whether or not Content Versioning is enabled for this collection.
            example: false
          archive_field:
            type: string
            description: What field holds the archive value.
            example:
            nullable: true
          archive_app_filter:
            type: string
            description: What value to use for "archived" items.
            example:
            nullable: true
          archive_value:
            type: string
            description: What value to use to "unarchive" items.
            example:
            nullable: true
          unarchive_value:
            type: string
            description: Whether or not to show the "archived" filter.
            example:
            nullable: true
          sort_field:
            type: string
            description: The sort field in the collection.
            example:
            nullable: true
responses:
  '200':
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: ../../components/schemas/collections.yaml
    description: Successful request
  '401':
    $ref: ../../components/responses.yaml#/UnauthorizedError
  '404':
    $ref: ../../components/responses.yaml#/NotFoundError
security: []
tags:
- Collections
x-codeSamples:
- label: Directus SDK
  lang: JavaScript
  source: |
    import { createDirectus, rest, createCollection } from '@directus/sdk';

    const client = createDirectus('directus_project_url').with(rest());

    const result = await client.request(
    	createCollection(collection_object)
    );
- label: GraphQL
  lang: GraphQL
  source: |
    POST /graphql/system

    type Mutation {
    	create_collections_item(data: directus_collections): directus_collections
    }
