get:
  summary: Retrieve a User
  description: Retrieve a single user by unique identifier.
  operationId: getUser
  parameters:
    - $ref: '../../openapi.yaml#/components/parameters/Fields'
    - $ref: '../../openapi.yaml#/components/parameters/Meta'
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '../../openapi.yaml#/components/schemas/Users'
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'
    '404':
      $ref: '../../openapi.yaml#/components/responses/NotFoundError'
  tags:
    - Users

patch:
  summary: Update a User
  description: Update an existing user
  operationId: updateUser
  parameters:
    - $ref: '../../openapi.yaml#/components/parameters/Fields'
    - $ref: '../../openapi.yaml#/components/parameters/Meta'
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../../openapi.yaml#/components/schemas/Users'
  responses:
    '200':
      content:
        application/json:
          schema:
            properties:
              data:
                type: object
            type: object
      description: Successful request
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'
    '404':
      $ref: '../../openapi.yaml#/components/responses/NotFoundError'
  tags:
    - Users

delete:
  summary: Delete a User
  description: Delete an existing user
  operationId: deleteUser
  responses:
    '200':
      description: Successful request
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'
    '404':
      $ref: '../../openapi.yaml#/components/responses/NotFoundError'
  tags:
    - Users
parameters:
  - $ref: '../../openapi.yaml#/components/parameters/UUId'
