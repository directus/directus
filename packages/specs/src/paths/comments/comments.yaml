get:
  tags:
    - Comments
  operationId: getComments
  summary: List Comments
  description: List the comments.
  security:
    - Auth: []
  parameters:
    - $ref: '../../openapi.yaml#/components/parameters/Fields'
    - $ref: '../../openapi.yaml#/components/parameters/Limit'
    - $ref: '../../openapi.yaml#/components/parameters/Offset'
    - $ref: '../../openapi.yaml#/components/parameters/Page'
    - $ref: '../../openapi.yaml#/components/parameters/Sort'

    - $ref: '../../openapi.yaml#/components/parameters/Filter'
    - $ref: '../../openapi.yaml#/components/parameters/Search'
    - $ref: '../../openapi.yaml#/components/parameters/Meta'
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '../../openapi.yaml#/components/schemas/Comments'
              meta:
                $ref: '../../openapi.yaml#/components/schemas/x-metadata'
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'

post:
  tags:
    - Comments
  operationId: createComment
  summary: Create a Comment
  description: Create a new comment.
  parameters:
    - $ref: '../../openapi.yaml#/components/parameters/Fields'
    - $ref: '../../openapi.yaml#/components/parameters/Meta'
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required: [collection, item, comment]
          properties:
            collection:
              type: string
              description: Which collection this collection comment is for.
              example: projects
            item:
              type: string
              example: 81dfa7e0-56d2-471f-b96a-1cf8a62bdf28
            comment:
              type: string
              example: A new comment
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '../../openapi.yaml#/components/schemas/Comments'
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'

patch:
  summary: Update Multiple Comments
  description: Update multiple comments at the same time.
  tags:
    - Comments
  operationId: updateComments
  parameters:
    - $ref: '../../openapi.yaml#/components/parameters/Fields'
    - $ref: '../../openapi.yaml#/components/parameters/Limit'
    - $ref: '../../openapi.yaml#/components/parameters/Meta'
    - $ref: '../../openapi.yaml#/components/parameters/Offset'

    - $ref: '../../openapi.yaml#/components/parameters/Sort'
    - $ref: '../../openapi.yaml#/components/parameters/Filter'
    - $ref: '../../openapi.yaml#/components/parameters/Search'
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            keys:
              type: array
              items:
                type: string
            data:
              type: object
              required: [collection]
              properties:
                collection:
                  type: string
                  description: Which collection this collection comment is for.
                  example: projects
                item:
                  type: string
                  example: 81dfa7e0-56d2-471f-b96a-1cf8a62bdf28
                comment:
                  type: string
                  example: A new comment
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '../../openapi.yaml#/components/schemas/Comments'
              meta:
                $ref: '../../openapi.yaml#/components/schemas/x-metadata'
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'

delete:
  summary: Delete Multiple Comments
  description: Delete multiple existing comments.
  tags:
    - Comments
  operationId: deleteComments
  responses:
    '200':
      description: Successful request
    '401':
      $ref: '../../openapi.yaml#/components/responses/UnauthorizedError'
