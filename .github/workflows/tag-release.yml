name: Tag Release

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  tag:
    name: Tag Release
    if:
      github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'Release') &&
      startsWith(github.event.pull_request.title, 'Release ')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Version and Tag
        id: version
        run: |
          # Read version from directus package.json
          VERSION=$(node -p "require('./directus/package.json').version")
          TAG="v$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"
          echo "Tag will be: $TAG"

      - name: Extract Release Notes
        id: notes
        run: |
          BODY="${{ github.event.pull_request.body }}"
          NOTES=$(printf '%s\n' "$BODY" | sed -n '/``````/p' | sed '1d;$d')
          echo "release_notes<<EOF" >> $GITHUB_OUTPUT
          echo "$NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.version.outputs.tag }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag "$TAG"
          git push origin "$TAG"
          echo "Created and pushed tag: $TAG"

      - name: Wait for GitHub Release Creation
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.version.outputs.tag }}"
          echo "⏳ Waiting for release workflow to create GitHub release for $TAG..."

          for i in {1..30}; do
            if gh release view "$TAG" > /dev/null 2>&1; then
              echo "✅ GitHub release $TAG found after ${i} attempts"
              break
            fi
            
            sleep 10
            
            if [ $i -eq 60 ]; then
              echo "❌ Timeout: GitHub release $TAG was not created after 5 minutes"
              exit 1
            fi
          done

      - name: Update Release Notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.version.outputs.tag }}"
          gh release edit "$TAG" --notes "${{ steps.notes.outputs.release_notes }}"
          echo "✅ Updated GitHub release with release notes for $TAG"
