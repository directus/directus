// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`graphql schema 1`] = `
"type Query {
  graphql_date_blocks(filter: graphql_date_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_date_blocks!]!
  graphql_date_blocks_by_id(id: ID!, version: String): graphql_date_blocks
  graphql_date_blocks_aggregated(groupBy: [String], filter: graphql_date_blocks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_date_blocks_aggregated!]!
  graphql_date_blocks_by_version(version: String!, id: ID!): version_graphql_date_blocks
  graphql_text_blocks(filter: graphql_text_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_text_blocks!]!
  graphql_text_blocks_by_id(id: ID!, version: String): graphql_text_blocks
  graphql_text_blocks_aggregated(groupBy: [String], filter: graphql_text_blocks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_text_blocks_aggregated!]!
  graphql_text_blocks_by_version(version: String!, id: ID!): version_graphql_text_blocks
  graphql_users(filter: graphql_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_users!]!
  graphql_users_by_id(id: ID!, version: String): graphql_users
  graphql_users_aggregated(groupBy: [String], filter: graphql_users_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_users_aggregated!]!
  graphql_users_by_version(version: String!, id: ID!): version_graphql_users
  graphql_articles(filter: graphql_articles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_articles!]!
  graphql_articles_by_id(id: ID!, version: String): graphql_articles
  graphql_articles_aggregated(groupBy: [String], filter: graphql_articles_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_articles_aggregated!]!
  graphql_articles_by_version(version: String!, id: ID!): version_graphql_articles
  graphql_articles_blocks(filter: graphql_articles_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_articles_blocks!]!
  graphql_articles_blocks_by_id(id: ID!, version: String): graphql_articles_blocks
  graphql_articles_blocks_aggregated(groupBy: [String], filter: graphql_articles_blocks_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_articles_blocks_aggregated!]!
  graphql_articles_blocks_by_version(version: String!, id: ID!): version_graphql_articles_blocks
  graphql_tags(filter: graphql_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_tags!]!
  graphql_tags_by_id(id: ID!, version: String): graphql_tags
  graphql_tags_aggregated(groupBy: [String], filter: graphql_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_tags_aggregated!]!
  graphql_tags_by_version(version: String!, id: ID!): version_graphql_tags
  graphql_articles_tags(filter: graphql_articles_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_articles_tags!]!
  graphql_articles_tags_by_id(id: ID!, version: String): graphql_articles_tags
  graphql_articles_tags_aggregated(groupBy: [String], filter: graphql_articles_tags_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_articles_tags_aggregated!]!
  graphql_articles_tags_by_version(version: String!, id: ID!): version_graphql_articles_tags
  graphql_links(filter: graphql_links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_links!]!
  graphql_links_by_id(id: ID!, version: String): graphql_links
  graphql_links_aggregated(groupBy: [String], filter: graphql_links_filter, limit: Int, offset: Int, page: Int, search: String, sort: [String]): [graphql_links_aggregated!]!
  graphql_links_by_version(version: String!, id: ID!): version_graphql_links
}

type Mutation {
  create_graphql_date_blocks_items(filter: graphql_date_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_date_blocks_input!]): [graphql_date_blocks!]!
  create_graphql_date_blocks_item(data: create_graphql_date_blocks_input!): graphql_date_blocks
  create_graphql_text_blocks_items(filter: graphql_text_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_text_blocks_input!]): [graphql_text_blocks!]!
  create_graphql_text_blocks_item(data: create_graphql_text_blocks_input!): graphql_text_blocks
  create_graphql_users_items(filter: graphql_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_users_input!]): [graphql_users!]!
  create_graphql_users_item(data: create_graphql_users_input!): graphql_users
  create_graphql_articles_items(filter: graphql_articles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_articles_input!]): [graphql_articles!]!
  create_graphql_articles_item(data: create_graphql_articles_input!): graphql_articles
  create_graphql_articles_blocks_items(filter: graphql_articles_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_articles_blocks_input!]): [graphql_articles_blocks!]!
  create_graphql_articles_blocks_item(data: create_graphql_articles_blocks_input!): graphql_articles_blocks
  create_graphql_tags_items(filter: graphql_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_tags_input!]): [graphql_tags!]!
  create_graphql_tags_item(data: create_graphql_tags_input!): graphql_tags
  create_graphql_articles_tags_items(filter: graphql_articles_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_articles_tags_input!]): [graphql_articles_tags!]!
  create_graphql_articles_tags_item(data: create_graphql_articles_tags_input!): graphql_articles_tags
  create_graphql_links_items(filter: graphql_links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [create_graphql_links_input!]): [graphql_links!]!
  create_graphql_links_item(data: create_graphql_links_input!): graphql_links
  update_graphql_date_blocks_items(filter: graphql_date_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_date_blocks_input!): [graphql_date_blocks!]!
  update_graphql_date_blocks_batch(filter: graphql_date_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_date_blocks_input!]): [graphql_date_blocks!]!
  update_graphql_date_blocks_item(id: ID!, data: update_graphql_date_blocks_input!): graphql_date_blocks
  update_graphql_text_blocks_items(filter: graphql_text_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_text_blocks_input!): [graphql_text_blocks!]!
  update_graphql_text_blocks_batch(filter: graphql_text_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_text_blocks_input!]): [graphql_text_blocks!]!
  update_graphql_text_blocks_item(id: ID!, data: update_graphql_text_blocks_input!): graphql_text_blocks
  update_graphql_users_items(filter: graphql_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_users_input!): [graphql_users!]!
  update_graphql_users_batch(filter: graphql_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_users_input!]): [graphql_users!]!
  update_graphql_users_item(id: ID!, data: update_graphql_users_input!): graphql_users
  update_graphql_articles_items(filter: graphql_articles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_articles_input!): [graphql_articles!]!
  update_graphql_articles_batch(filter: graphql_articles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_articles_input!]): [graphql_articles!]!
  update_graphql_articles_item(id: ID!, data: update_graphql_articles_input!): graphql_articles
  update_graphql_articles_blocks_items(filter: graphql_articles_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_articles_blocks_input!): [graphql_articles_blocks!]!
  update_graphql_articles_blocks_batch(filter: graphql_articles_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_articles_blocks_input!]): [graphql_articles_blocks!]!
  update_graphql_articles_blocks_item(id: ID!, data: update_graphql_articles_blocks_input!): graphql_articles_blocks
  update_graphql_tags_items(filter: graphql_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_tags_input!): [graphql_tags!]!
  update_graphql_tags_batch(filter: graphql_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_tags_input!]): [graphql_tags!]!
  update_graphql_tags_item(id: ID!, data: update_graphql_tags_input!): graphql_tags
  update_graphql_articles_tags_items(filter: graphql_articles_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_articles_tags_input!): [graphql_articles_tags!]!
  update_graphql_articles_tags_batch(filter: graphql_articles_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_articles_tags_input!]): [graphql_articles_tags!]!
  update_graphql_articles_tags_item(id: ID!, data: update_graphql_articles_tags_input!): graphql_articles_tags
  update_graphql_links_items(filter: graphql_links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, ids: [ID]!, data: update_graphql_links_input!): [graphql_links!]!
  update_graphql_links_batch(filter: graphql_links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String, data: [update_graphql_links_input!]): [graphql_links!]!
  update_graphql_links_item(id: ID!, data: update_graphql_links_input!): graphql_links
  delete_graphql_date_blocks_items(ids: [ID]!): delete_many
  delete_graphql_date_blocks_item(id: ID!): delete_one
  delete_graphql_text_blocks_items(ids: [ID]!): delete_many
  delete_graphql_text_blocks_item(id: ID!): delete_one
  delete_graphql_users_items(ids: [ID]!): delete_many
  delete_graphql_users_item(id: ID!): delete_one
  delete_graphql_articles_items(ids: [ID]!): delete_many
  delete_graphql_articles_item(id: ID!): delete_one
  delete_graphql_articles_blocks_items(ids: [ID]!): delete_many
  delete_graphql_articles_blocks_item(id: ID!): delete_one
  delete_graphql_tags_items(ids: [ID]!): delete_many
  delete_graphql_tags_item(id: ID!): delete_one
  delete_graphql_articles_tags_items(ids: [ID]!): delete_many
  delete_graphql_articles_tags_item(id: ID!): delete_one
  delete_graphql_links_items(ids: [ID]!): delete_many
  delete_graphql_links_item(id: ID!): delete_one
}

type Subscription {
  graphql_date_blocks_mutated(event: EventEnum): graphql_date_blocks_mutated
  graphql_text_blocks_mutated(event: EventEnum): graphql_text_blocks_mutated
  graphql_users_mutated(event: EventEnum): graphql_users_mutated
  graphql_articles_mutated(event: EventEnum): graphql_articles_mutated
  graphql_articles_blocks_mutated(event: EventEnum): graphql_articles_blocks_mutated
  graphql_tags_mutated(event: EventEnum): graphql_tags_mutated
  graphql_articles_tags_mutated(event: EventEnum): graphql_articles_tags_mutated
  graphql_links_mutated(event: EventEnum): graphql_links_mutated
}

"""The \`Boolean\` scalar type represents \`true\` or \`false\`."""
scalar Boolean

"""ISO8601 Date values"""
scalar Date

"""
The \`Float\` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
"""
scalar Float

"""A Float or a String"""
scalar GraphQLStringOrFloat

"""
The \`ID\` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as \`"4"\`) or integer (such as \`4\`) input value will be accepted as an ID.
"""
scalar ID

"""
The \`Int\` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
"""
scalar Int

"""
The \`JSON\` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The \`String\` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
"""
scalar String

enum EventEnum {
  create
  update
  delete
}

union graphql_articles_blocks_item_union = graphql_date_blocks | graphql_text_blocks

type count_functions {
  count: Int
}

type date_functions {
  year: Int
  month: Int
  week: Int
  day: Int
  weekday: Int
}

type delete_many {
  ids: [ID]!
}

type delete_one {
  id: ID!
}

type graphql_articles {
  id: ID!
  title: String
  author(filter: graphql_users_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): graphql_users
  tags(filter: graphql_articles_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_articles_tags]
  tags_func: count_functions
  links(filter: graphql_links_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_links]
  links_func: count_functions
  blocks(filter: graphql_articles_blocks_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): [graphql_articles_blocks]
  blocks_func: count_functions
}

type graphql_articles_aggregated {
  group: JSON
  countAll: Int
  count: graphql_articles_aggregated_count
  countDistinct: graphql_articles_aggregated_count
  avg: graphql_articles_aggregated_fields
  sum: graphql_articles_aggregated_fields
  avgDistinct: graphql_articles_aggregated_fields
  sumDistinct: graphql_articles_aggregated_fields
  min: graphql_articles_aggregated_fields
  max: graphql_articles_aggregated_fields
}

type graphql_articles_aggregated_count {
  id: Int
  title: Int
  author: Int
  tags: Int
  links: Int
  blocks: Int
}

type graphql_articles_aggregated_fields {
  id: Float
  author: Float
}

type graphql_articles_blocks {
  id: ID!
  articles_id(filter: graphql_articles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): graphql_articles
  item: graphql_articles_blocks_item_union
  collection: String
}

type graphql_articles_blocks_aggregated {
  group: JSON
  countAll: Int
  count: graphql_articles_blocks_aggregated_count
  countDistinct: graphql_articles_blocks_aggregated_count
  avg: graphql_articles_blocks_aggregated_fields
  sum: graphql_articles_blocks_aggregated_fields
  avgDistinct: graphql_articles_blocks_aggregated_fields
  sumDistinct: graphql_articles_blocks_aggregated_fields
  min: graphql_articles_blocks_aggregated_fields
  max: graphql_articles_blocks_aggregated_fields
}

type graphql_articles_blocks_aggregated_count {
  id: Int
  articles_id: Int
  item: Int
  collection: Int
}

type graphql_articles_blocks_aggregated_fields {
  id: Float
  articles_id: Float
}

type graphql_articles_blocks_mutated {
  key: ID!
  event: EventEnum
  data: graphql_articles_blocks
}

type graphql_articles_mutated {
  key: ID!
  event: EventEnum
  data: graphql_articles
}

type graphql_articles_tags {
  id: ID!
  articles_id(filter: graphql_articles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): graphql_articles
  tags_id(filter: graphql_tags_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): graphql_tags
}

type graphql_articles_tags_aggregated {
  group: JSON
  countAll: Int
  count: graphql_articles_tags_aggregated_count
  countDistinct: graphql_articles_tags_aggregated_count
  avg: graphql_articles_tags_aggregated_fields
  sum: graphql_articles_tags_aggregated_fields
  avgDistinct: graphql_articles_tags_aggregated_fields
  sumDistinct: graphql_articles_tags_aggregated_fields
  min: graphql_articles_tags_aggregated_fields
  max: graphql_articles_tags_aggregated_fields
}

type graphql_articles_tags_aggregated_count {
  id: Int
  articles_id: Int
  tags_id: Int
}

type graphql_articles_tags_aggregated_fields {
  id: Float
  articles_id: Float
  tags_id: Float
}

type graphql_articles_tags_mutated {
  key: ID!
  event: EventEnum
  data: graphql_articles_tags
}

type graphql_date_blocks {
  id: ID!
  date: Date
  date_func: date_functions
}

type graphql_date_blocks_aggregated {
  group: JSON
  countAll: Int
  count: graphql_date_blocks_aggregated_count
  countDistinct: graphql_date_blocks_aggregated_count
  avg: graphql_date_blocks_aggregated_fields
  sum: graphql_date_blocks_aggregated_fields
  avgDistinct: graphql_date_blocks_aggregated_fields
  sumDistinct: graphql_date_blocks_aggregated_fields
  min: graphql_date_blocks_aggregated_fields
  max: graphql_date_blocks_aggregated_fields
}

type graphql_date_blocks_aggregated_count {
  id: Int
  date: Int
}

type graphql_date_blocks_aggregated_fields {
  id: Float
}

type graphql_date_blocks_mutated {
  key: ID!
  event: EventEnum
  data: graphql_date_blocks
}

type graphql_links {
  id: ID!
  article_id(filter: graphql_articles_filter, sort: [String], limit: Int, offset: Int, page: Int, search: String): graphql_articles
  link: String
}

type graphql_links_aggregated {
  group: JSON
  countAll: Int
  count: graphql_links_aggregated_count
  countDistinct: graphql_links_aggregated_count
  avg: graphql_links_aggregated_fields
  sum: graphql_links_aggregated_fields
  avgDistinct: graphql_links_aggregated_fields
  sumDistinct: graphql_links_aggregated_fields
  min: graphql_links_aggregated_fields
  max: graphql_links_aggregated_fields
}

type graphql_links_aggregated_count {
  id: Int
  article_id: Int
  link: Int
}

type graphql_links_aggregated_fields {
  id: Float
  article_id: Float
}

type graphql_links_mutated {
  key: ID!
  event: EventEnum
  data: graphql_links
}

type graphql_tags {
  id: ID!
  tag: String
}

type graphql_tags_aggregated {
  group: JSON
  countAll: Int
  count: graphql_tags_aggregated_count
  countDistinct: graphql_tags_aggregated_count
  avg: graphql_tags_aggregated_fields
  sum: graphql_tags_aggregated_fields
  avgDistinct: graphql_tags_aggregated_fields
  sumDistinct: graphql_tags_aggregated_fields
  min: graphql_tags_aggregated_fields
  max: graphql_tags_aggregated_fields
}

type graphql_tags_aggregated_count {
  id: Int
  tag: Int
}

type graphql_tags_aggregated_fields {
  id: Float
}

type graphql_tags_mutated {
  key: ID!
  event: EventEnum
  data: graphql_tags
}

type graphql_text_blocks {
  id: ID!
  text: String
}

type graphql_text_blocks_aggregated {
  group: JSON
  countAll: Int
  count: graphql_text_blocks_aggregated_count
  countDistinct: graphql_text_blocks_aggregated_count
  avg: graphql_text_blocks_aggregated_fields
  sum: graphql_text_blocks_aggregated_fields
  avgDistinct: graphql_text_blocks_aggregated_fields
  sumDistinct: graphql_text_blocks_aggregated_fields
  min: graphql_text_blocks_aggregated_fields
  max: graphql_text_blocks_aggregated_fields
}

type graphql_text_blocks_aggregated_count {
  id: Int
  text: Int
}

type graphql_text_blocks_aggregated_fields {
  id: Float
}

type graphql_text_blocks_mutated {
  key: ID!
  event: EventEnum
  data: graphql_text_blocks
}

type graphql_users {
  id: ID!
  name: String
}

type graphql_users_aggregated {
  group: JSON
  countAll: Int
  count: graphql_users_aggregated_count
  countDistinct: graphql_users_aggregated_count
  avg: graphql_users_aggregated_fields
  sum: graphql_users_aggregated_fields
  avgDistinct: graphql_users_aggregated_fields
  sumDistinct: graphql_users_aggregated_fields
  min: graphql_users_aggregated_fields
  max: graphql_users_aggregated_fields
}

type graphql_users_aggregated_count {
  id: Int
  name: Int
}

type graphql_users_aggregated_fields {
  id: Float
}

type graphql_users_mutated {
  key: ID!
  event: EventEnum
  data: graphql_users
}

""""""
type version_graphql_articles {
  id: ID
  title: String
  author: JSON
  tags: JSON
  links: JSON
  blocks: JSON
}

""""""
type version_graphql_articles_blocks {
  id: ID
  articles_id: JSON
  item: String
  collection: String
}

""""""
type version_graphql_articles_tags {
  id: ID
  articles_id: JSON
  tags_id: JSON
}

""""""
type version_graphql_date_blocks {
  id: ID
  date: Date
}

""""""
type version_graphql_links {
  id: ID
  article_id: JSON
  link: String
}

""""""
type version_graphql_tags {
  id: ID
  tag: String
}

""""""
type version_graphql_text_blocks {
  id: ID
  text: String
}

""""""
type version_graphql_users {
  id: ID
  name: String
}

input count_function_filter_operators {
  count: number_filter_operators
}

input create_graphql_articles_blocks_input {
  id: ID
  articles_id: create_graphql_articles_input
  item: String
  collection: String
}

input create_graphql_articles_input {
  id: ID
  title: String
  author: create_graphql_users_input
  tags: [create_graphql_articles_tags_input]
  links: [create_graphql_links_input]
  blocks: [create_graphql_articles_blocks_input]
}

input create_graphql_articles_tags_input {
  id: ID
  articles_id: create_graphql_articles_input
  tags_id: create_graphql_tags_input
}

input create_graphql_date_blocks_input {
  id: ID
  date: Date
}

input create_graphql_links_input {
  id: ID
  article_id: create_graphql_articles_input
  link: String
}

input create_graphql_tags_input {
  id: ID
  tag: String
}

input create_graphql_text_blocks_input {
  id: ID
  text: String
}

input create_graphql_users_input {
  id: ID
  name: String
}

input date_filter_operators {
  _eq: String
  _neq: String
  _gt: String
  _gte: String
  _lt: String
  _lte: String
  _null: Boolean
  _nnull: Boolean
  _in: [String]
  _nin: [String]
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input date_function_filter_operators {
  year: number_filter_operators
  month: number_filter_operators
  week: number_filter_operators
  day: number_filter_operators
  weekday: number_filter_operators
}

input graphql_articles_blocks_filter {
  id: number_filter_operators
  articles_id: graphql_articles_filter
  collection: string_filter_operators
  _and: [graphql_articles_blocks_filter]
  _or: [graphql_articles_blocks_filter]
  item__graphql_date_blocks: graphql_date_blocks_filter
  item__graphql_text_blocks: graphql_text_blocks_filter
}

""""""
input graphql_articles_blocks_quantifier_filter {
  id: number_filter_operators
  articles_id: graphql_articles_filter
  collection: string_filter_operators
  _and: [graphql_articles_blocks_filter]
  _or: [graphql_articles_blocks_filter]
  _some: graphql_articles_blocks_filter
  _none: graphql_articles_blocks_filter
  item__graphql_date_blocks: graphql_date_blocks_filter
  item__graphql_text_blocks: graphql_text_blocks_filter
}

input graphql_articles_filter {
  id: number_filter_operators
  title: string_filter_operators
  author: graphql_users_filter
  tags: graphql_articles_tags_quantifier_filter
  tags_func: count_function_filter_operators
  links: graphql_links_quantifier_filter
  links_func: count_function_filter_operators
  blocks: graphql_articles_blocks_quantifier_filter
  blocks_func: count_function_filter_operators
  _and: [graphql_articles_filter]
  _or: [graphql_articles_filter]
}

input graphql_articles_tags_filter {
  id: number_filter_operators
  articles_id: graphql_articles_filter
  tags_id: graphql_tags_filter
  _and: [graphql_articles_tags_filter]
  _or: [graphql_articles_tags_filter]
}

""""""
input graphql_articles_tags_quantifier_filter {
  id: number_filter_operators
  articles_id: graphql_articles_filter
  tags_id: graphql_tags_filter
  _and: [graphql_articles_tags_filter]
  _or: [graphql_articles_tags_filter]
  _some: graphql_articles_tags_filter
  _none: graphql_articles_tags_filter
}

input graphql_date_blocks_filter {
  id: number_filter_operators
  date: date_filter_operators
  date_func: date_function_filter_operators
  _and: [graphql_date_blocks_filter]
  _or: [graphql_date_blocks_filter]
}

input graphql_links_filter {
  id: number_filter_operators
  article_id: graphql_articles_filter
  link: string_filter_operators
  _and: [graphql_links_filter]
  _or: [graphql_links_filter]
}

""""""
input graphql_links_quantifier_filter {
  id: number_filter_operators
  article_id: graphql_articles_filter
  link: string_filter_operators
  _and: [graphql_links_filter]
  _or: [graphql_links_filter]
  _some: graphql_links_filter
  _none: graphql_links_filter
}

input graphql_tags_filter {
  id: number_filter_operators
  tag: string_filter_operators
  _and: [graphql_tags_filter]
  _or: [graphql_tags_filter]
}

input graphql_text_blocks_filter {
  id: number_filter_operators
  text: string_filter_operators
  _and: [graphql_text_blocks_filter]
  _or: [graphql_text_blocks_filter]
}

input graphql_users_filter {
  id: number_filter_operators
  name: string_filter_operators
  _and: [graphql_users_filter]
  _or: [graphql_users_filter]
}

input number_filter_operators {
  _eq: GraphQLStringOrFloat
  _neq: GraphQLStringOrFloat
  _in: [GraphQLStringOrFloat]
  _nin: [GraphQLStringOrFloat]
  _gt: GraphQLStringOrFloat
  _gte: GraphQLStringOrFloat
  _lt: GraphQLStringOrFloat
  _lte: GraphQLStringOrFloat
  _null: Boolean
  _nnull: Boolean
  _between: [GraphQLStringOrFloat]
  _nbetween: [GraphQLStringOrFloat]
}

input string_filter_operators {
  _eq: String
  _neq: String
  _contains: String
  _icontains: String
  _ncontains: String
  _starts_with: String
  _nstarts_with: String
  _istarts_with: String
  _nistarts_with: String
  _ends_with: String
  _nends_with: String
  _iends_with: String
  _niends_with: String
  _in: [String]
  _nin: [String]
  _null: Boolean
  _nnull: Boolean
  _empty: Boolean
  _nempty: Boolean
}

input update_graphql_articles_blocks_input {
  id: ID
  articles_id: update_graphql_articles_input
  item: String
  collection: String
}

input update_graphql_articles_input {
  id: ID
  title: String
  author: update_graphql_users_input
  tags: [update_graphql_articles_tags_input]
  links: [update_graphql_links_input]
  blocks: [update_graphql_articles_blocks_input]
}

input update_graphql_articles_tags_input {
  id: ID
  articles_id: update_graphql_articles_input
  tags_id: update_graphql_tags_input
}

input update_graphql_date_blocks_input {
  id: ID
  date: Date
}

input update_graphql_links_input {
  id: ID
  article_id: update_graphql_articles_input
  link: String
}

input update_graphql_tags_input {
  id: ID
  tag: String
}

input update_graphql_text_blocks_input {
  id: ID
  text: String
}

input update_graphql_users_input {
  id: ID
  name: String
}"
`;
